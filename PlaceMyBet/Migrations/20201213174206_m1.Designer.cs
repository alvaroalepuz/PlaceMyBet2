// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaceMyBet.Models;

namespace PlaceMyBet.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20201213174206_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlaceMyBet.Models.apuesta", b =>
                {
                    b.Property<int>("apuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Dinero")
                        .HasColumnType("double");

                    b.Property<int>("MercadoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("usuarioId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("apuestaId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Apuesta");

                    b.HasData(
                        new
                        {
                            apuestaId = 1,
                            Dinero = 400.0,
                            MercadoId = 1,
                            Tipo = "under",
                            usuarioId = "alvaroalepuz99@gmail.com"
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.casaapuestas", b =>
                {
                    b.Property<int>("casaapuestasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreBanco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumeroTarjeta")
                        .HasColumnType("int");

                    b.Property<int>("SaldoActual")
                        .HasColumnType("int");

                    b.Property<string>("emailId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("casaapuestasId");

                    b.ToTable("Casaapuestas");

                    b.HasData(
                        new
                        {
                            casaapuestasId = 1,
                            NombreBanco = "Bankia",
                            NumeroTarjeta = 239458,
                            SaldoActual = 300,
                            emailId = "alvaroalepuz99@gmail.com"
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.evento", b =>
                {
                    b.Property<int>("eventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreNombreEquipoLocal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreNombreEquipoVisitante")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("fecha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("mercadoId")
                        .HasColumnType("int");

                    b.HasKey("eventoId");

                    b.HasIndex("mercadoId");

                    b.ToTable("Evento");

                    b.HasData(
                        new
                        {
                            eventoId = 1,
                            NombreNombreEquipoLocal = "Barcelona",
                            NombreNombreEquipoVisitante = "Madrid",
                            fecha = "06-08-2077",
                            mercadoId = 1
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.mercado", b =>
                {
                    b.Property<int>("mercadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CuotaOver")
                        .HasColumnType("double");

                    b.Property<double>("CuotaUnder")
                        .HasColumnType("double");

                    b.Property<double>("DineroOver")
                        .HasColumnType("double");

                    b.Property<double>("DineroUnder")
                        .HasColumnType("double");

                    b.Property<double>("Mercado")
                        .HasColumnType("double");

                    b.HasKey("mercadoId");

                    b.ToTable("Mercado");

                    b.HasData(
                        new
                        {
                            mercadoId = 1,
                            CuotaOver = 30.0,
                            CuotaUnder = 90.0,
                            DineroOver = 500.0,
                            DineroUnder = 100.0,
                            Mercado = 1.5
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.usuario", b =>
                {
                    b.Property<string>("usuarioId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("MercadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("casaapuestaRcasaapuestasId")
                        .HasColumnType("int");

                    b.HasKey("usuarioId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("casaapuestaRcasaapuestasId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            usuarioId = "alvaroalepuz99@gmail.com",
                            Apellido = "Alepuz",
                            Edad = 10,
                            MercadoId = 1,
                            Nombre = "Alvaro"
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.apuesta", b =>
                {
                    b.HasOne("PlaceMyBet.Models.mercado", "mercadoR")
                        .WithMany()
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaceMyBet.Models.usuario", null)
                        .WithMany("apuestaR")
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("PlaceMyBet.Models.evento", b =>
                {
                    b.HasOne("PlaceMyBet.Models.mercado", null)
                        .WithMany("eventoR")
                        .HasForeignKey("mercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaceMyBet.Models.usuario", b =>
                {
                    b.HasOne("PlaceMyBet.Models.mercado", null)
                        .WithMany("usuarioR")
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaceMyBet.Models.casaapuestas", "casaapuestaR")
                        .WithMany()
                        .HasForeignKey("casaapuestaRcasaapuestasId");
                });
#pragma warning restore 612, 618
        }
    }
}
